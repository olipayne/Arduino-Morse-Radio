name: PlatformIO CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [production, debug]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/packages
            ~/.platformio/platforms
            ~/.platformio/toolchains
          key: ${{ runner.os }}-pio-${{ hashFiles('**/platformio.ini') }}
          restore-keys: |
            ${{ runner.os }}-pio-

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install PlatformIO Core
        run: pip install --upgrade platformio

      - name: Build Binaries
        run: pio run -e ${{ matrix.env }}

      - name: Merge Binaries
        run: |
          VERSION=${{ github.sha }}
          # Merge binary
          ~/.platformio/packages/tool-esptoolpy/esptool.py --chip esp32s3 merge_bin --output .pio/build/${{ matrix.env }}/merged-flash.bin --flash_mode dio --flash_size=keep 0x0 .pio/build/${{ matrix.env }}/bootloader.bin 0x8000 .pio/build/${{ matrix.env }}/partitions.bin 0x10000 .pio/build/${{ matrix.env }}/firmware.bin
          mv .pio/build/${{ matrix.env }}/merged-flash.bin .pio/build/${{ matrix.env }}/firmware-${VERSION}-${{ matrix.env }}.bin

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: firmware-${{ matrix.env }}
          path: .pio/build/${{ matrix.env }}/firmware-${VERSION}-${{ matrix.env }}.bin

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: firmware-production
          path: ./artifacts

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: firmware-debug
          path: ./artifacts

      - name: Create Release
        run: gh release create "$TAG_NAME" --notes "$BODY" ./artifacts/firmware-${{ github.sha }}-production.bin ./artifacts/firmware-${{ github.sha }}-debug.bin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ github.sha }}
          BODY: "Release for commit ${{ github.sha }}"
